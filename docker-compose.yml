version: '3.9'

services:
  postgres:
    image: postgres
    container_name: psql_db
    restart: unless-stopped
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres:/var/lib/postgresql/data

#  pgadmin:
#    container_name: ms_pgadmin
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#    ports:
#      - 5050:80

  service-register:
    build:
      context: ./service-register
    container_name: service_register
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8761:8761"

  gateway-service:
    build:
      context: ./gateway-service
    container_name: gateway_service
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-register:8761/eureka/
    ports:
      - "8080:8080"

  transport-service:
    build:
      context: ./transport-service
    container_name: transport_service
    depends_on:
      - postgres
      - service-register
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/transport
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-register:8761/eureka/
    ports:
      - "8081:8081"

  user-service:
    build:
      context: ./user-service
    container_name: user_service
    depends_on:
      - postgres
      - service-register
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/users
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-register:8761/eureka/
    ports:
      - "8082:8082"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "29092:29092"

#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    container_name: kafka_ui
#    depends_on:
#      - kafka
#    environment:
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
#    ports:
#      - "8083:8080"

volumes:
  postgres:
  pgadmin:
